[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ukraine-support-tracker"
version = "1.0.0"
description = "Interactive visualization dashboard for Ukraine support tracking"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Philipp Petermeier", email = "your.email@example.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.10"
dependencies = [
    # Core web framework
    "shiny>=1.2.1",
    "shinywidgets>=0.3.4",
    "starlette>=0.41.3",
    "uvicorn>=0.32.0",
    
    # Data processing and database
    "pandas>=2.2.3",
    "numpy>=2.1.3",
    "duckdb>=1.1.3",
    "openpyxl>=3.1.5",
    
    # Visualization
    "plotly>=5.24.1",
    
    # Configuration and utilities
    "pyyaml>=6.0.2",
    "python-dateutil>=2.9.0",
    "humanize>=4.11.0",
    
    # HTML and template processing
    "htmltools>=0.6.0",
    "jinja2>=3.1.4",
    "beautifulsoup4>=4.12.3",
    
    # Async and web utilities
    "anyio>=4.6.2",
    "asgiref>=3.8.1",
    "websockets>=14.1",
    "requests>=2.32.3",
    
    # JSON and data validation
    "orjson>=3.10.11",
    "jsonschema>=4.23.0",
    "attrs>=24.2.0",
    
    # Development and debugging
    "click>=8.1.7",
    "watchfiles>=0.24.0",
]

[project.optional-dependencies]
dev = [
    # Code quality
    "ruff>=0.7.4",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
    
    # Type stubs
    "types-python-dateutil>=2.9.0",
    "types-pyyaml>=6.0.12",
    "types-requests>=2.31.0",
    
    # Data validation
    "pydantic>=2.5.0",
]

jupyter = [
    # Jupyter ecosystem
    "jupyter>=1.0.0",
    "ipykernel>=6.29.5",
    "ipython>=8.18.0",
    "ipywidgets>=8.1.5",
    "notebook>=6.5.7",
    "jupyterlab>=4.0.0",
    
    # Jupyter extensions
    "jupyterlab-widgets>=3.0.13",
    "widgetsnbextension>=4.0.13",
]

deployment = [
    # Deployment tools
    "rsconnect-python>=1.24.0",
    "pins>=0.8.6",
    "python-multipart>=0.0.17",
    
    # Performance monitoring
    "prometheus-client>=0.21.0",
    "psutil>=6.1.0",
]

all = [
    "ukraine-support-tracker[dev,jupyter,deployment]"
]

[project.urls]
Homepage = "https://github.com/PPetermeier/ShinyUkraine"
Repository = "https://github.com/PPetermeier/ShinyUkraine"
Documentation = "https://github.com/PPetermeier/ShinyUkraine/blob/main/README.md"
"Bug Tracker" = "https://github.com/PPetermeier/ShinyUkraine/issues"

[project.scripts]
ukraine-dashboard = "main:main"
etl-pipeline = "Code.DataPipeline.ETL:main"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"

exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg",
    ".mypy_cache", ".nox", ".pants.d", ".pytype", ".ruff_cache",
    ".svn", ".tox", ".venv", "__pypackages__", "_build",
    "buck-out", "build", "dist", "node_modules", "venv",
]

[tool.ruff.lint]
# Code quality and style enforcement
select = ["E", "F", "W", "I", "N", "D", "UP", "B", "C4", "PD"]
ignore = ["F841"]
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["D100", "D101", "D102", "D103", "D104"]

[tool.ruff.lint.isort]
known-first-party = ["ukraine_support_tracker"]
known-third-party = ["pydantic", "shiny", "plotly", "pandas", "duckdb"]
section-order = [
    "future", "standard-library", "third-party", 
    "first-party", "local-folder"
]


[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "plotly.*",
    "shiny.*",
    "duckdb.*",
    "openpyxl.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["Code/Shiny", "Code/DataPipeline"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# UV-specific configurations
[tool.uv]
dev-dependencies = [
    "ukraine-support-tracker[dev]"
]

[tool.uv.sources]
# Local development sources if needed

[tool.hatch.build.targets.wheel]
packages = ["Code/Shiny", "Code/DataPipeline"]

[tool.hatch.metadata]
allow-direct-references = true